enum AuthErrors {
  BASIC_AUTH_CONFIGURATION_ERROR = 'BASIC_AUTH_CONFIGURATION_ERROR',
  CODE_CHALLENGE_FAILED = 'CODE_CHALLENGE_FAILED',
  CODE_NOT_FOUND = 'CODE_NOT_FOUND',
  DISCOVERY_CONFIGURATION_ERROR = 'DISCOVERY_CONFIGURATION_ERROR',
  DISCOVERY_CONTENT_TYPE_ERROR = 'DISCOVERY_CONTENT_TYPE_ERROR',
  EMAILS_IS_NOT_AVAILABLE_OR_BLOCKED = 'EMAILS_IS_NOT_AVAILABLE_OR_BLOCKED',
  ENDPOINT_CONFIGURATION_ERROR = 'ENDPOINT_CONFIGURATION_ERROR',
  ENDPOINT_NOT_FOUND = 'ENDPOINT_NOT_FOUND',
  INVALID_ACCESS_TOKEN = 'INVALID_ACCESS_TOKEN',
  INVALID_CLIENT = 'INVALID_CLIENT',
  INVALID_CREDENTIALS = 'INVALID_CREDENTIALS',
  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',
  INVALID_REFRESH_TOKEN = 'INVALID_REFRESH_TOKEN',
  INVALID_TOKEN = 'INVALID_TOKEN',
  LOGIN_VALIDATION_ERROR = 'LOGIN_VALIDATION_ERROR',
  REGISTER_VALIDATION_ERROR = 'REGISTER_VALIDATION_ERROR',
  RESET_PASSWORD_VALIDATION_ERROR = 'RESET_PASSWORD_VALIDATION_ERROR',
  STATE_MISMATCH = 'STATE_MISMATCH',
  STATE_NOT_FOUND = 'STATE_NOT_FOUND',
  TOKEN_REQUEST_CREDENTIALS_ERROR = 'TOKEN_REQUEST_CREDENTIALS_ERROR',
  TOKEN_REQUEST_ERROR = 'TOKEN_REQUEST_ERROR',
  TOKEN_REQUEST_UNKNOWN_ERROR = 'TOKEN_REQUEST_UNKNOWN_ERROR',
}

enum FetchErrors {
  FETCH_RESPONSE_ERROR = 'FETCH_RESPONSE_ERROR',
  JSON_PARSE_ERROR = 'JSON_PARSE_ERROR',
  REQUEST_ERROR = 'REQUEST_ERROR',
  RESPONSE_ERROR = 'RESPONSE_ERROR',
}

enum ImplementationErrors {
  NOT_IMPLEMENTED = 'NOT_IMPLEMENTED',
}

// Schema errors
enum SchemaErrors {
  SCHEMA_VALIDATION_ERROR = 'SCHEMA_VALIDATION_ERROR',
}

enum UserErrors {
  USER_NOT_LOGGED_IN = 'USER_NOT_LOGGED_IN',
}

type APP_ERRORS =
  | AuthErrors
  | FetchErrors
  | ImplementationErrors
  | SchemaErrors
  | UserErrors

export type { APP_ERRORS }

export {
  AuthErrors,
  FetchErrors,
  ImplementationErrors,
  SchemaErrors,
  UserErrors,
}
