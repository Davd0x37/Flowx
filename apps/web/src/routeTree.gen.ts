/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file is auto-generated by TanStack Router
// Import Routes
import { Route as AuthenticateAuthViewImport } from './../app/pages/Authenticate/AuthView';
import { Route as DashboardHomeImport } from './../app/pages/Dashboard/Home';
import { Route as ErrorErrorPageImport } from './../app/pages/Error/ErrorPage';
import { Route as ErrorNotFoundImport } from './../app/pages/Error/NotFound';
import { Route as LayoutViewAuthImport } from './../app/pages/LayoutView/Auth';
import { Route as LayoutViewDefaultImport } from './../app/pages/LayoutView/Default';
import { Route as ServicesServicesViewImport } from './../app/pages/Services/ServicesView';
import { Route as UserDefaultViewImport } from './../app/pages/User/DefaultView';
import { Route as UserDetailsImport } from './../app/pages/User/Details';
import { Route as UserSettingsImport } from './../app/pages/User/Settings';
import { Route as rootRoute } from './../app/pages/__root';

// Create/Update Routes

const UserSettingsRoute = UserSettingsImport.update({
  path: '/User/Settings',
  getParentRoute: () => rootRoute,
} as any);

const UserDetailsRoute = UserDetailsImport.update({
  path: '/User/Details',
  getParentRoute: () => rootRoute,
} as any);

const UserDefaultViewRoute = UserDefaultViewImport.update({
  path: '/User/DefaultView',
  getParentRoute: () => rootRoute,
} as any);

const ServicesServicesViewRoute = ServicesServicesViewImport.update({
  path: '/Services/ServicesView',
  getParentRoute: () => rootRoute,
} as any);

const LayoutViewDefaultRoute = LayoutViewDefaultImport.update({
  path: '/LayoutView/Default',
  getParentRoute: () => rootRoute,
} as any);

const LayoutViewAuthRoute = LayoutViewAuthImport.update({
  path: '/LayoutView/Auth',
  getParentRoute: () => rootRoute,
} as any);

const ErrorNotFoundRoute = ErrorNotFoundImport.update({
  path: '/Error/NotFound',
  getParentRoute: () => rootRoute,
} as any);

const ErrorErrorPageRoute = ErrorErrorPageImport.update({
  path: '/Error/ErrorPage',
  getParentRoute: () => rootRoute,
} as any);

const DashboardHomeRoute = DashboardHomeImport.update({
  path: '/Dashboard/Home',
  getParentRoute: () => rootRoute,
} as any);

const AuthenticateAuthViewRoute = AuthenticateAuthViewImport.update({
  path: '/Authenticate/AuthView',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/Authenticate/AuthView': {
      preLoaderRoute: typeof AuthenticateAuthViewImport;
      parentRoute: typeof rootRoute;
    };
    '/Dashboard/Home': {
      preLoaderRoute: typeof DashboardHomeImport;
      parentRoute: typeof rootRoute;
    };
    '/Error/ErrorPage': {
      preLoaderRoute: typeof ErrorErrorPageImport;
      parentRoute: typeof rootRoute;
    };
    '/Error/NotFound': {
      preLoaderRoute: typeof ErrorNotFoundImport;
      parentRoute: typeof rootRoute;
    };
    '/LayoutView/Auth': {
      preLoaderRoute: typeof LayoutViewAuthImport;
      parentRoute: typeof rootRoute;
    };
    '/LayoutView/Default': {
      preLoaderRoute: typeof LayoutViewDefaultImport;
      parentRoute: typeof rootRoute;
    };
    '/Services/ServicesView': {
      preLoaderRoute: typeof ServicesServicesViewImport;
      parentRoute: typeof rootRoute;
    };
    '/User/DefaultView': {
      preLoaderRoute: typeof UserDefaultViewImport;
      parentRoute: typeof rootRoute;
    };
    '/User/Details': {
      preLoaderRoute: typeof UserDetailsImport;
      parentRoute: typeof rootRoute;
    };
    '/User/Settings': {
      preLoaderRoute: typeof UserSettingsImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticateAuthViewRoute,
  DashboardHomeRoute,
  ErrorErrorPageRoute,
  ErrorNotFoundRoute,
  LayoutViewAuthRoute,
  LayoutViewDefaultRoute,
  ServicesServicesViewRoute,
  UserDefaultViewRoute,
  UserDetailsRoute,
  UserSettingsRoute,
]);

/* prettier-ignore-end */
