/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as authAuthImport } from './routes/(auth)/auth'
import { Route as AppUserIndexImport } from './routes/_app/user/index'
import { Route as AppUserSettingsImport } from './routes/_app/user/settings'
import { Route as authAuthSignupImport } from './routes/(auth)/auth/signup'
import { Route as authAuthLoginImport } from './routes/(auth)/auth/login'
import { Route as AppUserSettingsIndexImport } from './routes/_app/user/settings/index'
import { Route as AppUserSettingsSecurityImport } from './routes/_app/user/settings/security'
import { Route as AppUserSettingsNotificationsImport } from './routes/_app/user/settings/notifications'
import { Route as AppUserSettingsAdvancedImport } from './routes/_app/user/settings/advanced'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const authAuthRoute = authAuthImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppUserIndexRoute = AppUserIndexImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => AppRoute,
} as any)

const AppUserSettingsRoute = AppUserSettingsImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => AppRoute,
} as any)

const authAuthSignupRoute = authAuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthLoginRoute = authAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authAuthRoute,
} as any)

const AppUserSettingsIndexRoute = AppUserSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppUserSettingsRoute,
} as any)

const AppUserSettingsSecurityRoute = AppUserSettingsSecurityImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AppUserSettingsRoute,
} as any)

const AppUserSettingsNotificationsRoute =
  AppUserSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AppUserSettingsRoute,
  } as any)

const AppUserSettingsAdvancedRoute = AppUserSettingsAdvancedImport.update({
  id: '/advanced',
  path: '/advanced',
  getParentRoute: () => AppUserSettingsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/(auth)/auth/login': {
      id: '/(auth)/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof authAuthLoginImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/auth/signup': {
      id: '/(auth)/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof authAuthSignupImport
      parentRoute: typeof authAuthImport
    }
    '/_app/user/settings': {
      id: '/_app/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof AppUserSettingsImport
      parentRoute: typeof AppImport
    }
    '/_app/user/': {
      id: '/_app/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AppUserIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/user/settings/advanced': {
      id: '/_app/user/settings/advanced'
      path: '/advanced'
      fullPath: '/user/settings/advanced'
      preLoaderRoute: typeof AppUserSettingsAdvancedImport
      parentRoute: typeof AppUserSettingsImport
    }
    '/_app/user/settings/notifications': {
      id: '/_app/user/settings/notifications'
      path: '/notifications'
      fullPath: '/user/settings/notifications'
      preLoaderRoute: typeof AppUserSettingsNotificationsImport
      parentRoute: typeof AppUserSettingsImport
    }
    '/_app/user/settings/security': {
      id: '/_app/user/settings/security'
      path: '/security'
      fullPath: '/user/settings/security'
      preLoaderRoute: typeof AppUserSettingsSecurityImport
      parentRoute: typeof AppUserSettingsImport
    }
    '/_app/user/settings/': {
      id: '/_app/user/settings/'
      path: '/'
      fullPath: '/user/settings/'
      preLoaderRoute: typeof AppUserSettingsIndexImport
      parentRoute: typeof AppUserSettingsImport
    }
  }
}

// Create and export the route tree

interface AppUserSettingsRouteChildren {
  AppUserSettingsAdvancedRoute: typeof AppUserSettingsAdvancedRoute
  AppUserSettingsNotificationsRoute: typeof AppUserSettingsNotificationsRoute
  AppUserSettingsSecurityRoute: typeof AppUserSettingsSecurityRoute
  AppUserSettingsIndexRoute: typeof AppUserSettingsIndexRoute
}

const AppUserSettingsRouteChildren: AppUserSettingsRouteChildren = {
  AppUserSettingsAdvancedRoute: AppUserSettingsAdvancedRoute,
  AppUserSettingsNotificationsRoute: AppUserSettingsNotificationsRoute,
  AppUserSettingsSecurityRoute: AppUserSettingsSecurityRoute,
  AppUserSettingsIndexRoute: AppUserSettingsIndexRoute,
}

const AppUserSettingsRouteWithChildren = AppUserSettingsRoute._addFileChildren(
  AppUserSettingsRouteChildren,
)

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppUserSettingsRoute: typeof AppUserSettingsRouteWithChildren
  AppUserIndexRoute: typeof AppUserIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppUserSettingsRoute: AppUserSettingsRouteWithChildren,
  AppUserIndexRoute: AppUserIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface authAuthRouteChildren {
  authAuthLoginRoute: typeof authAuthLoginRoute
  authAuthSignupRoute: typeof authAuthSignupRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthLoginRoute: authAuthLoginRoute,
  authAuthSignupRoute: authAuthSignupRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/auth': typeof authAuthRouteWithChildren
  '/': typeof AppIndexRoute
  '/auth/login': typeof authAuthLoginRoute
  '/auth/signup': typeof authAuthSignupRoute
  '/user/settings': typeof AppUserSettingsRouteWithChildren
  '/user': typeof AppUserIndexRoute
  '/user/settings/advanced': typeof AppUserSettingsAdvancedRoute
  '/user/settings/notifications': typeof AppUserSettingsNotificationsRoute
  '/user/settings/security': typeof AppUserSettingsSecurityRoute
  '/user/settings/': typeof AppUserSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof authAuthRouteWithChildren
  '/': typeof AppIndexRoute
  '/auth/login': typeof authAuthLoginRoute
  '/auth/signup': typeof authAuthSignupRoute
  '/user': typeof AppUserIndexRoute
  '/user/settings/advanced': typeof AppUserSettingsAdvancedRoute
  '/user/settings/notifications': typeof AppUserSettingsNotificationsRoute
  '/user/settings/security': typeof AppUserSettingsSecurityRoute
  '/user/settings': typeof AppUserSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/(auth)/auth': typeof authAuthRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/(auth)/auth/login': typeof authAuthLoginRoute
  '/(auth)/auth/signup': typeof authAuthSignupRoute
  '/_app/user/settings': typeof AppUserSettingsRouteWithChildren
  '/_app/user/': typeof AppUserIndexRoute
  '/_app/user/settings/advanced': typeof AppUserSettingsAdvancedRoute
  '/_app/user/settings/notifications': typeof AppUserSettingsNotificationsRoute
  '/_app/user/settings/security': typeof AppUserSettingsSecurityRoute
  '/_app/user/settings/': typeof AppUserSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/user/settings'
    | '/user'
    | '/user/settings/advanced'
    | '/user/settings/notifications'
    | '/user/settings/security'
    | '/user/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/'
    | '/auth/login'
    | '/auth/signup'
    | '/user'
    | '/user/settings/advanced'
    | '/user/settings/notifications'
    | '/user/settings/security'
    | '/user/settings'
  id:
    | '__root__'
    | '/_app'
    | '/(auth)/auth'
    | '/_app/'
    | '/(auth)/auth/login'
    | '/(auth)/auth/signup'
    | '/_app/user/settings'
    | '/_app/user/'
    | '/_app/user/settings/advanced'
    | '/_app/user/settings/notifications'
    | '/_app/user/settings/security'
    | '/_app/user/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  authAuthRoute: typeof authAuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  authAuthRoute: authAuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(auth)/auth"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/user/settings",
        "/_app/user/"
      ]
    },
    "/(auth)/auth": {
      "filePath": "(auth)/auth.tsx",
      "children": [
        "/(auth)/auth/login",
        "/(auth)/auth/signup"
      ]
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/(auth)/auth/login": {
      "filePath": "(auth)/auth/login.tsx",
      "parent": "/(auth)/auth"
    },
    "/(auth)/auth/signup": {
      "filePath": "(auth)/auth/signup.tsx",
      "parent": "/(auth)/auth"
    },
    "/_app/user/settings": {
      "filePath": "_app/user/settings.tsx",
      "parent": "/_app",
      "children": [
        "/_app/user/settings/advanced",
        "/_app/user/settings/notifications",
        "/_app/user/settings/security",
        "/_app/user/settings/"
      ]
    },
    "/_app/user/": {
      "filePath": "_app/user/index.tsx",
      "parent": "/_app"
    },
    "/_app/user/settings/advanced": {
      "filePath": "_app/user/settings/advanced.tsx",
      "parent": "/_app/user/settings"
    },
    "/_app/user/settings/notifications": {
      "filePath": "_app/user/settings/notifications.tsx",
      "parent": "/_app/user/settings"
    },
    "/_app/user/settings/security": {
      "filePath": "_app/user/settings/security.tsx",
      "parent": "/_app/user/settings"
    },
    "/_app/user/settings/": {
      "filePath": "_app/user/settings/index.tsx",
      "parent": "/_app/user/settings"
    }
  }
}
ROUTE_MANIFEST_END */
