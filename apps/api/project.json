{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "name": "@flowx/api",
  "sourceRoot": "apps/api/app",
  "projectType": "application",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@nx/esbuild:esbuild",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "platform": "node",
        "outputPath": "{projectRoot}/dist",
        "format": ["esm"],
        "main": "{projectRoot}/app/index.ts",
        "tsConfig": "{projectRoot}/tsconfig.app.json",
        "declaration": false,
        "esbuildOptions": {
          "sourcemap": true,
          "outExtension": {
            ".js": ".js"
          }
        }
      },
      "configurations": {
        "development": {},
        "production": {
          "esbuildOptions": {
            "sourcemap": false,
            "outExtension": {
              ".js": ".js"
            }
          }
        }
      }
    },
    "type-check": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "commands": ["tsc -p tsconfig.app.json --noEmit"],
        "forwardAllArgs": false,
        "description": "Type check with tsc"
      }
    },
    "watch": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "commands": ["tsx watch --tsconfig tsconfig.app.json ./app/index.ts"],
        "forwardAllArgs": false,
        "description": "Dev mode with tsx"
      }
    },
    "docker-build": {
      "dependsOn": ["build"],
      "command": "docker build -f Dockerfile . -t api"
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "dependsOn": ["build"],
      "options": {
        "buildTarget": "@flowx/api:build",
        "runBuildTargetDependencies": false
      },
      "configurations": {
        "development": {
          "buildTarget": "@flowx/api:build:development"
        },
        "production": {
          "buildTarget": "@flowx/api:build:production"
        }
      }
    }
  }
}
